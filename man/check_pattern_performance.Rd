% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc-util-functions.R
\name{check_pattern_performance}
\alias{check_pattern_performance}
\title{Get the amount possible pattern combinations}
\usage{
check_pattern_performance(text, pattern, glob = FALSE, ...)
}
\arguments{
\item{text}{A quanteda corpus object, text that can be transformed to a
corpus object, or a quanteda tokens object}

\item{pattern}{A quanteda pattern, i.e., a character vector, list of
character vectors, dictionary, or collocations object.}

\item{glob}{Are patterns glob-style? Defaults to FALSE (for regex patterns).}

\item{...}{Additional parameters passed to quanteda:::pattern2list.}
}
\value{
A table containing the patterns and how many possible combinations
they produce for a given text or tokens object. On top are the patterns that
produce the most combinations and, thus, need the most memory.
}
\description{
Wildcards in patterns can potentially lead to a huge number
of possible combinations in tokens. This in turn leads to problems with
memory usage, in some quanteda functions. With this function you can check
which patterns in a dictionary are the most problematic (= produce the
highest number of possible combinations). This was suggested by Kohei
Watanabe here:
\url{https://github.com/quanteda/quanteda/issues/1539#issuecomment-451588580}
}
